	/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
	/*
	* Copyright (C) STMicroelectronics 2020 - All Rights Reserved
	* Author: STM32CubeMX code generation for STMicroelectronics.
	*/

	/* For more information on Device Tree configuration, please refer to
	* https://wiki.st.com/stm32mpu/wiki/Category:Device_tree_configuration
	*/

/dts-v1/;
#include <dt-bindings/pinctrl/stm32-pinfunc.h>

#include "stm32mp157.dtsi"
#include "stm32mp15xa.dtsi"
#include "stm32mp15xxac-pinctrl.dtsi"
#include "stm32mp157-m4-srm.dtsi"

/ {
	model = "Engicam MicroGEA STM32MP1 microdev";
	compatible = "st,stm32mp157a-ugeast-mx", "st,stm32mp157";

	aliases {
		ethernet0 = &ethernet0;
		serial0 = &uart4;
		serial1 = &uart8;
		serial2 = &usart3;
		serial3 = &uart7;
		serial4 = &usart1;
	};

	usb_phy_tuning: usb-phy-tuning {
		st,hs-dc-level = <2>;
		st,fs-rftime-tuning;
		st,hs-rftime-reduction;
		st,hs-current-trim = <15>;
		st,hs-impedance-trim = <1>;
		st,squelch-level = <3>;
		st,hs-rx-offset = <2>;
		st,no-lsfs-sc;
	};

	memory@c0000000 {
		device_type = "memory";
		reg = <0xc0000000 0x10000000>;

		/* USER CODE BEGIN memory */
		/* USER CODE END memory */
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		gpu_reserved: gpu@da000000 {
			reg = <0xda000000 0x4000000>;
			no-map;
		};

		optee_memory: optee@0xde000000 {
			reg = <0xde000000 0x02000000>;
			no-map;
		};
	};


	/* USER CODE BEGIN root */
	vddcore: regulator-vddcore {
		compatible = "regulator-fixed";
		regulator-name = "vddcore";
		regulator-min-microvolt = <1200000>;
		regulator-max-microvolt = <1200000>;
		regulator-always-on;
	};

	vdd: regulator-vdd {
		compatible = "regulator-fixed";
		regulator-name = "vdd";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	vdd_usb: regulator-vdd_usb {
		compatible = "regulator-fixed";
		regulator-name = "vdd_usb";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	vdda: regulator-vdda {
		compatible = "regulator-fixed";
		regulator-name = "vdda";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	vdd_ddr: regulator-vdd_ddr {
		compatible = "regulator-fixed";
		regulator-name = "vdd_ddr";
		regulator-min-microvolt = <1350000>;
		regulator-max-microvolt = <1350000>;
		regulator-always-on;
	};

	vtt_ddr: regulator-vtt_ddr {
		compatible = "regulator-fixed";
		regulator-name = "vtt_ddr";
		regulator-min-microvolt = <675000>;
		regulator-max-microvolt = <675000>;
		regulator-always-on;
		vin-supply = <&vdd>;
	};

	vref_ddr: regulator-vref_ddr {
		compatible = "regulator-fixed";
		regulator-name = "vref_ddr";
		regulator-min-microvolt = <675000>;
		regulator-max-microvolt = <675000>;
		regulator-always-on;
		vin-supply = <&vdd>;
	};

	vdd_sd: regulator-vdd_sd {
		compatible = "regulator-fixed";
		regulator-name = "vdd_sd";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	v3v3: regulator-v3v3 {
		compatible = "regulator-fixed";
		regulator-name = "v3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	v2v8: regulator-v2v8 {
		compatible = "regulator-fixed";
		regulator-name = "v2v8";
		regulator-min-microvolt = <2800000>;
		regulator-max-microvolt = <2800000>;
		regulator-always-on;
		vin-supply = <&v3v3>;
	};

	v1v8: regulator-v1v8 {
		compatible = "regulator-fixed";
		regulator-name = "v1v8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
		vin-supply = <&v3v3>;
	};

	vbus_otg: regulator-vbus_otg {
		compatible = "regulator-fixed";
		regulator-name = "vbus_otg";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};
	
	lcd_3v3: regulator-lcd_3v3 {
		compatible = "regulator-fixed";
		regulator-name = "lcd_3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpiof 10 0>;
		enable-active-high;
		regulator-always-on;
	};
	/* USER CODE END root */

	clocks {
		#ifndef CONFIG_STM32MP1_TRUSTED
		clk_lsi: clk-lsi {
			clock-frequency = <32000>;
		};
		clk_hsi: clk-hsi {
			clock-frequency = <64000000>;
		};
		clk_csi: clk-csi {
			clock-frequency = <4000000>;
		};
		clk_lse: clk-lse {
			clock-frequency = <32768>;
		};
		clk_hse: clk-hse {
			clock-frequency = <24000000>;
		};
	#endif	/*CONFIG_STM32MP1_TRUSTED*/
	};

	gpio_export {
		compatible = "gpio-export";
		#size-cells = <0>;
		gpio-overvoltage {
			gpio-export,name = "GPIO-OVERVOLTAGE";
			gpio-export,output = <0>;
			gpios = <&gpiof 11 0>;
		};
	};
};

&pinctrl {
	u-boot,dm-pre-reloc;

	eth1_pins_mx: eth1_mx-0 {
		pins1 {
			pinmux = <STM32_PINMUX('A', 2, AF11)>, /* ETH_MDIO */
				<STM32_PINMUX('C', 1, AF11)>, /* ETH_MDC */
				<STM32_PINMUX('A', 7, AF11)>, /* ETH_RX_DV */
				<STM32_PINMUX('B', 11, AF11)>, /* ETH_TX_EN */
				<STM32_PINMUX('C', 4, AF11)>, /* ETH_RX_D0 */
				<STM32_PINMUX('C', 5, AF11)>, /* ETH_RX_D1 */
				<STM32_PINMUX('G', 13, AF11)>, /* ETH_TX_D0 */
				<STM32_PINMUX('G', 14, AF11)>; /* ETH_TX_D1 */
			bias-disable;
			drive-push-pull;
			slew-rate = <3>;
		};

		pins2 {
			pinmux = <STM32_PINMUX('A', 1, AF0)>; /* ETH_CLK */
			bias-disable;
			slew-rate = <1>;
		};
	};

	eth_res: eth_res-0 {
		pins {
			pinmux = <STM32_PINMUX('A', 13, GPIO)>;
			bias-disable;
			drive-push-pull;
			output-high;
			slew-rate = <0>;
		};
	};

	fdcan1_pins_mx: fdcan1_mx-0 {
		pins1 {
			pinmux = <STM32_PINMUX('B', 9, AF9)>; /* FDCAN1_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('I', 9, AF9)>; /* FDCAN1_RX */
			bias-disable;
		};
	};

	fmc_pins_mx: fmc_mx-0 {
		pins1 {
				pinmux = <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
								<STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
								<STM32_PINMUX('D', 11, AF12)>, /* FMC_A16_FMC_CLE */
								<STM32_PINMUX('D', 12, AF12)>, /* FMC_A17_FMC_ALE */
								<STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
								<STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
								<STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
								<STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
								<STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
								<STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
								<STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
								<STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
								<STM32_PINMUX('G', 9, AF12)>; /* FMC_NE2_FMC_NCE */
				bias-disable;
				drive-push-pull;
				slew-rate = <1>;
		};
		pins2 {
				pinmux = <STM32_PINMUX('D', 6, AF12)>; /* FMC_NWAIT */
				bias-pull-up;
		};
	};

	i2c2_pins_mx: i2c2_mx-0 {
		pins {
			pinmux = <STM32_PINMUX('H', 4, AF4)>, /* I2C2_SCL */
						<STM32_PINMUX('H', 5, AF4)>; /* I2C2_SDA */
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};

	rtc_pins_mx: rtc_mx-0 {
		pins {
			pinmux = <STM32_PINMUX('I', 8, ANALOG)>; /* RTC_LSCO */
		};
	};

	sai2b_pins_mx: sai2b_mx-0 {
		pins {
			pinmux = <STM32_PINMUX('E', 11, AF10)>, /* SAI2_SD_B */
						<STM32_PINMUX('E', 12, AF10)>, /* SAI2_SCK_B */
						<STM32_PINMUX('E', 13, AF10)>, /* SAI2_FS_B */
						<STM32_PINMUX('E', 14, AF10)>; /* SAI2_MCLK_B */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	sdmmc1_pins_mx: sdmmc1_mx-0 {
		u-boot,dm-pre-reloc;
		pins1 {
			pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
								<STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
								<STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
								<STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
								<STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
			slew-rate = <3>;
			drive-push-pull;
			bias-pull-up;
		};
		pins2 {
			pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
			slew-rate = <3>;
			drive-push-pull;
			bias-pull-down;
		};
	};

	sdmmc1_opendrain_pins_mx: sdmmc1_opendrain_mx-0 {
		u-boot,dm-pre-reloc;
		pins1 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
						<STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
						<STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
						<STM32_PINMUX('C', 11, AF12)>; /* SDMMC1_D3 */
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};
		pins2 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
			bias-disable;
			drive-push-pull;
			slew-rate = <3>;
		};
		pins3 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
			bias-disable;
			drive-open-drain;
			slew-rate = <1>;
		};
	};

	uart4_pins_mx: uart4_mx-0 {
		u-boot,dm-pre-reloc;
		pins1 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
			bias-disable;
		};
		pins2 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	uart7_pins_mx: uart7_mx-0 {
		pins1 {
			pinmux = <STM32_PINMUX('B', 3, AF13)>; /* UART7_RX */
			bias-disable;
		};
		pins2 {
			pinmux = <STM32_PINMUX('B', 4, AF13)>; /* UART7_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	uart8_pins_mx: uart8_mx-0 {
		pins1 {
			pinmux = <STM32_PINMUX('E', 0, AF8)>; /* UART8_RX */
			bias-disable;
		};
		pins2 {
			pinmux = <STM32_PINMUX('E', 1, AF8)>; /* UART8_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	usart3_pins_mx: usart3_mx-0 {
		u-boot,dm-pre-reloc;
		pins1 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('B', 10, AF7)>; /* USART3_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
			bias-disable;
		};
	};

	usart6_pins_mx: usart6_mx-0 {
		u-boot,dm-pre-reloc;
		pins1 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('C', 6, AF7)>; /* USART6_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('C', 7, AF7)>; /* USART6_RX */
			bias-disable;
		};
	};

	i2c4_sleep_pins_mx: i2c4_sleep_mx-0 {
			pins {
					pinmux = <STM32_PINMUX('H', 11, ANALOG)>, /* I2C4_SCL */
									 <STM32_PINMUX('H', 12, ANALOG)>; /* I2C4_SDA */
			};
	};
	ltdc_sleep_pins_mx: ltdc_sleep_mx-0 {
			pins {
					pinmux = <STM32_PINMUX('A', 3, ANALOG)>, /* LTDC_B2 */
									 <STM32_PINMUX('A', 4, ANALOG)>, /* LTDC_VSYNC */
									 <STM32_PINMUX('A', 8, ANALOG)>, /* LTDC_R6 */
									 <STM32_PINMUX('A', 9, ANALOG)>, /* LTDC_R5 */
									 <STM32_PINMUX('A', 15, ANALOG)>, /* LTDC_R1 */
									 <STM32_PINMUX('D', 10, ANALOG)>, /* LTDC_B3 */
									 <STM32_PINMUX('E', 4, ANALOG)>, /* LTDC_B0 */
									 <STM32_PINMUX('E', 5, ANALOG)>, /* LTDC_G0 */
									 <STM32_PINMUX('E', 6, ANALOG)>, /* LTDC_G1 */
									 <STM32_PINMUX('F', 10, ANALOG)>, /* LTDC_DE */
									 <STM32_PINMUX('G', 6, ANALOG)>, /* LTDC_R7 */
									 <STM32_PINMUX('G', 7, ANALOG)>, /* LTDC_CLK */
									 <STM32_PINMUX('G', 12, ANALOG)>, /* LTDC_B1 */
									 <STM32_PINMUX('H', 2, ANALOG)>, /* LTDC_R0 */
									 <STM32_PINMUX('H', 8, ANALOG)>, /* LTDC_R2 */
									 <STM32_PINMUX('H', 9, ANALOG)>, /* LTDC_R3 */
									 <STM32_PINMUX('H', 10, ANALOG)>, /* LTDC_R4 */
									 <STM32_PINMUX('H', 13, ANALOG)>, /* LTDC_G2 */
									 <STM32_PINMUX('H', 14, ANALOG)>, /* LTDC_G3 */
									 <STM32_PINMUX('H', 15, ANALOG)>, /* LTDC_G4 */
									 <STM32_PINMUX('I', 0, ANALOG)>, /* LTDC_G5 */
									 <STM32_PINMUX('I', 1, ANALOG)>, /* LTDC_G6 */
									 <STM32_PINMUX('I', 2, ANALOG)>, /* LTDC_G7 */
									 <STM32_PINMUX('I', 4, ANALOG)>, /* LTDC_B4 */
									 <STM32_PINMUX('I', 5, ANALOG)>, /* LTDC_B5 */
									 <STM32_PINMUX('I', 6, ANALOG)>, /* LTDC_B6 */
									 <STM32_PINMUX('I', 7, ANALOG)>, /* LTDC_B7 */
									 <STM32_PINMUX('I', 10, ANALOG)>; /* LTDC_HSYNC */
			};
	};
};

&pinctrl_z {
	u-boot,dm-pre-reloc;

	usart1_pins_z_mx: usart1_mx-0 {
		u-boot,dm-pre-reloc;
		pins1 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('Z', 6, AF7)>; /* USART1_RX */
			bias-disable;
		};
		pins2 {
			u-boot,dm-pre-reloc;
			pinmux = <STM32_PINMUX('Z', 7, AF7)>; /* USART1_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	/* USER CODE BEGIN pinctrl_z */
	/* USER CODE END pinctrl_z */
};

&bsec{
	status = "okay";

/* USER CODE BEGIN bsec */
/* USER CODE END bsec */
};

&ethernet0 {
	pinctrl-names = "default";
	pinctrl-0 = <&eth1_pins_mx  &eth_res>;
	phy-mode = "rmii";
	max-speed = <100>;
	phy-handle = <&phy0>;
	snps,ps-speed = <100>;
	st,eth-ref-clk-sel = <1>;
	status = "okay";

	clock-names = "stmmaceth",
							"mac-clk-tx",
							"mac-clk-rx",
							"ethstp",
							"syscfg-clk",
							"eth-ck";

	clocks = <&rcc ETHMAC>,
					<&rcc ETHTX>,
					<&rcc ETHRX>,
					<&rcc ETHSTP>,
					<&rcc SYSCFG>,
					<&rcc ETHCK_K>;

	mdio0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
		snps,reset-gpio = <&gpioa 13 0>;
		snps,reset-delays-us = <25>;
		snps,reset-active-low;

		phy0: ethernet-phy-0 {
			reg = <0>;
		};
	};
};

&fmc {
	pinctrl-names = "default";
	pinctrl-0 = <&fmc_pins_mx>;
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	nand: nand@0 {
		reg = <0>;
		nand-on-flash-bbt;
		#address-cells = <1>;
		#size-cells = <1>;

		partition@0 {
			label = "nand-boot";
			reg = <0x00000000 0x01400000>;
		};

		partition@1400000 {
			label = "nand-fs";
			reg = <0x01400000 0x1e000000>;
		};
	};
};

&gpu {
	status = "okay";

/* USER CODE BEGIN gpu */
/* USER CODE END gpu */
};

&hsem {
	status = "okay";

/* USER CODE BEGIN hsem */
/* USER CODE END hsem */
};

&i2c2 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins_mx>;
	status = "okay";

/* USER CODE BEGIN i2c2 */
/* USER CODE END i2c2 */
};

&m_can1 {
	pinctrl-names = "default";
	pinctrl-0 = <&fdcan1_pins_mx>;
	status = "disabled";

/* USER CODE BEGIN m_can1 */
/* USER CODE END m_can1 */
};

&mdma1 {
	status = "okay";

/* USER CODE BEGIN mdma1 */
/* USER CODE END mdma1 */
};

&rcc {
	u-boot,dm-pre-reloc;
	status = "okay";

/* USER CODE BEGIN rcc */
/* USER CODE END rcc */
};

&rng1 {
	status = "okay";

/* USER CODE BEGIN rng1 */
/* USER CODE END rng1 */
};

&rtc {
	pinctrl-names = "default";
	pinctrl-0 = <&rtc_pins_mx>;
	status = "okay";

/* USER CODE BEGIN rtc */
/* USER CODE END rtc */
};

&sai2 {
	pinctrl-names = "default";
	pinctrl-0 = <&sai2b_pins_mx>;
	status = "disabled";

/* USER CODE BEGIN sai2 */
/* USER CODE END sai2 */

	sai2b:audio-controller@4400b024{
		status = "disabled";

/* USER CODE BEGIN sai2b */
/* USER CODE END sai2b */
};
};

&sdmmc1{
	u-boot,dm-pre-reloc;
	pinctrl-names = "default", "opendrain";
	pinctrl-0 = <&sdmmc1_pins_mx>;
	pinctrl-1 = <&sdmmc1_opendrain_pins_mx>;
	status = "okay";

	/* USER CODE BEGIN sdmmc1 */
	broken-cd;
	disable-wp;
	st,neg-edge;
	bus-width = <4>;
	max-frequency = <10000000>;
	vmmc-supply = <&v3v3>;
/* USER CODE END sdmmc1 */
};

&tamp{
	status = "okay";

/* USER CODE BEGIN tamp */
/* USER CODE END tamp */
};


&uart4{
	u-boot,dm-pre-reloc;
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins_mx>;
	status = "okay";

	/* USER CODE BEGIN uart4 */
	/* USER CODE END uart4 */
};

&uart7{
	pinctrl-names = "default";
	pinctrl-0 = <&uart7_pins_mx>;
	status = "disable";

	/* USER CODE BEGIN uart7 */
	/* USER CODE END uart7 */
};

&uart8{
	pinctrl-names = "default";
	pinctrl-0 = <&uart8_pins_mx>;
	status = "okay";

	/* USER CODE BEGIN uart8 */
	/* USER CODE END uart8 */
};

&usart1{
	u-boot,dm-pre-reloc;
	pinctrl-names = "default";
	pinctrl-0 = <&usart1_pins_z_mx>;
	status = "okay";

	/* USER CODE BEGIN usart1 */
	/* USER CODE END usart1 */
};

&usart3{
	u-boot,dm-pre-reloc;
	pinctrl-names = "default";
	pinctrl-0 = <&usart3_pins_mx>;
	status = "disabled";

	/* USER CODE BEGIN usart3 */
	/* USER CODE END usart3 */
};

&usart6{
	u-boot,dm-pre-reloc;
	pinctrl-names = "default";
	pinctrl-0 = <&usart6_pins_mx>;
	status = "okay";

	/* USER CODE BEGIN usart6 */
	/* USER CODE END usart6 */
};

&usbh_ehci {
	phys = <&usbphyc_port0>;
	phy-names = "usb";
	status = "okay";
};

&usbh_ohci {
	phys = <&usbphyc_port0>;
	phy-names = "usb";
	status = "okay";
};

&usbotg_hs {
	dr_mode = "host";
	force-b-session-valid;
	phys = <&usbphyc_port1 0>;
	phy-names = "usb2-phy";
	status = "okay";
};

&usbphyc {
	status = "okay";
};

&usbphyc_port0 {
	st,phy-tuning = <&usb_phy_tuning>;
};

&usbphyc_port1 {
	st,phy-tuning = <&usb_phy_tuning>;
};

/* USER CODE BEGIN addons */
&cpu0{
	cpu-supply = <&vddcore>;
};

&cpu1{
	cpu-supply = <&vddcore>;
};

&optee {
	status = "okay";
};
/* USER CODE END addons */
